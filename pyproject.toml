[tool.poetry]
name = "gaitmap"
version = "2.0.2"
description = "The Gait and Movement Analysis Package - Your definite guide to reliable IMU based human movement analysis."
authors = [
    "Arne Küderle <arne.kuederle@fau.de>",
    "Martin Ullrich <martin.ullrich@fau.de>",
    "Nils Roth <nils.roth@fau.de>",
    "Malte Ollenschläger <Malte.Ollenschlaeger@fau.de>",
    "Alzhraa Ahmed <alzhraa.ahmed@fau.de>",
    "Raul C. Sîmpetru <raul.simpetru@fau.de>",
    "Dominik Prossel <dominik.prossel@fau.de>",
    "Liv Herzer <liv.herzer@fau.de>",
    "Felix Kluge <felix.kluge@fau.de>"
]
packages = [
  { include = "gaitmap" },
    # TODO: Remove once gaitmap_mad is a seperate package
  { include = "gaitmap_mad", from = "gaitmap_mad"}
]

[tool.poetry.dependencies]
python = ">=3.8.0,<4.0"
pandas = ">=1"
scipy = ">=1.6.1"
typing_extensions = ">=4.1.1"
numba =  [
    {version = ">=0.55"},
    {version = ">=0.55.2", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'"}
]
numpy = ">=1.20"
joblib = ">=1.2.0"
scikit-learn = ">=1.0.1"
# We restrict it to 0.14.6 for now, as later versions don't seem to work on Linux
# This version of pomegranate does not support Python 3.10, unfortunately
pomegranate = {version = ">=0.14.2,<=0.14.6", python = "<3.10", optional = true}
tpcp = ">=0.12"
pingouin = {version = "^0.5.3", optional = true}

[tool.poetry.extras]
hmm = ["pomegranate"]
stats = ["pingouin"]
all = ["pomegranate", "pingouin"]

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.18.1"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
prospector = "^1.7.7"
black = "^22.12.0"
recommonmark = "^0.7.1"
coverage = "^7.0.5"
ipykernel = "^6.20.2"
IPython = "^8.8.0"
ipympl = "^0.9.2"
memory_profiler = "^0.61.0"
toml = "^0.10.2"
isort = "^5.11.4"
# TODO: Reactivate once gaitmap_mad is a seperate package
# gaitmap-mad = {path = "gaitmap_mad", develop = true}
sphinx-gallery = "^0.11.1"
pydata-sphinx-theme = "^0.12.0"
numpydoc = "^1.5.0"
Sphinx = "^6.1.3"

[tool.black]
line-length = 120
target-version = ['py38']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | _debug_test
    | docs
    | build
    | dist
    | \.virtual_documents
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
skip_gitignore = true

[tool.poe.tasks]
_format_black = "black ."
_format_isort = "isort ."
format = ["_format_black", "_format_isort"]
lint = { cmd = "prospector", help = "Lint all files with Prospector." }
_check_black = "black . --check"
_check_isort = "isort . --check"
check = { sequence = ["_check_black", "_check_isort", "lint"], help = "Check all potential format and linting issues.", ignore_fail = false }
test = { cmd = "pytest --cov=gaitmap --cov=gaitmap_mad --cov-report=term-missing --cov-report=xml", help = "Run Pytest with coverage." }
docs = { "script" = "_tasks:task_docs()",  help = "Build the html docs using Sphinx." }
register_jupyter = { "script" = "_tasks:task_register_ipykernel()",  help = "Register the gaitmap environment as a Jupyter kernel for testing." }
version = { "script" = "_tasks:task_update_version()", help = "Bump version in all relevant places." }
bump_dev = { script = "_tasks:task_bump_all_dev()", help= "Update all dev dependencies to their @latest version."}

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

