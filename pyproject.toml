[tool.poetry]
name = "gaitmap"
version = "2.4.0"
description = "The Gait and Movement Analysis Package - Your definite guide to reliable IMU based human movement analysis."
license = "MIT"
readme = "README.md"
homepage = "https://github.com/mad-lab-fau/gaitmap"
repository = "https://github.com/mad-lab-fau/gaitmap"
authors = [
    "Arne Küderle <arne.kuederle@fau.de>",
    "Martin Ullrich <martin.ullrich@fau.de>",
    "Nils Roth <nils.roth@fau.de>",
    "Malte Ollenschläger <Malte.Ollenschlaeger@fau.de>",
    "Alzhraa Ahmed <alzhraa.ahmed@fau.de>",
    "Moradi, Hamid <hamid.moradi@fau.de>",
    "Raul C. Sîmpetru <raul.simpetru@fau.de>",
    "Dominik Prossel <dominik.prossel@fau.de>",
    "Liv Herzer <liv.herzer@fau.de>",
    "Felix Kluge <felix.kluge@fau.de>"
]
packages = [
  { include = "gaitmap" },
]

[tool.poetry.dependencies]
python = ">=3.9.0,<4.0"
pandas = ">=2"
scipy = ">=1.6.1"
typing_extensions = ">=4.1.1"
numba =  [
    {version = ">=0.55"},
    {version = ">=0.55.2", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'"}
]
numpy = ">=1.20"
joblib = ">=1.2.0"
scikit-learn = ">=1.0.1"
# We restrict it to 0.14.6 for now, as later versions don't seem to work on Linux
# This version of pomegranate does not support Python 3.10, unfortunately
pomegranate = {version = ">=0.14.2,<=0.14.6", python = "<3.10", optional = true}
tpcp = "^0.32.0"
pingouin = {version = "^0.5.3", optional = true}
pooch = "^1.7.0"

[tool.poetry.extras]
hmm = ["pomegranate"]
stats = ["pingouin"]
all = ["pomegranate", "pingouin"]

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.18.1"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
coverage = "^7.0.5"
ipykernel = "^6.20.2"
IPython = "^8.8.0"
ipympl = "^0.9.2"
memory_profiler = "^0.61.0"
toml = "^0.10.2"
gaitmap-mad = {path = "gaitmap_mad", develop = true}
sphinx-gallery = "^0.11.1"
pydata-sphinx-theme = "^0.14.0"
numpydoc = "^1.5.0"
Sphinx = "^6.1.3"
ruff = "^0.3.4"
myst-parser = "^1.0.0"

[tool.poe.tasks]
_format = "ruff format ."
_auto_fix = "ruff check . --fix-only --show-fixes --exit-zero"
_auto_fix_unsafe = "ruff check . --fix-only --show-fixes --exit-zero --unsafe-fixes"
format = ["_auto_fix", "_format"]
format_unsafe = ["_auto_fix_unsafe", "_format"]
lint = { cmd = "ruff check gaitmap gaitmap_mad --fix", help = "Lint all files with ruff." }
_lint_ci = "ruff check gaitmap gaitmap_mad --output-format=github"
_check_format = "ruff format . --check"
ci_check = { sequence = ["_check_format", "_lint_ci"], help = "Check all potential format and linting issues." }
test = { cmd = "pytest --cov=gaitmap --cov-report=term-missing --cov-report=xml", help = "Run Pytest with coverage." }
docs = { "script" = "_tasks:task_docs()",  help = "Build the html docs using Sphinx." }
docs_clean = { "script" = "_tasks:task_docs(clean=True)",  help = "Remove all old build files and build a clean version of the docs." }
docs_linkcheck = { "script" = "_tasks:task_docs(builder='linkcheck')", help = "Check all links in the built html docs." }
docs_preview = { cmd = "python -m http.server --directory docs/_build/html", help = "Preview the built html docs." }
register_jupyter = { "script" = "_tasks:task_register_ipykernel()",  help = "Register the gaitmap environment as a Jupyter kernel for testing." }
version = { "script" = "_tasks:task_update_version()", help = "Bump version in all relevant places." }
bump_dev = { script = "_tasks:task_bump_all_dev()", help= "Update all dev dependencies to their @latest version."}

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

