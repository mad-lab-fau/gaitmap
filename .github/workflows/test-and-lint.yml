name: Test and Lint

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ windows-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies (all)
      if : ${{ matrix.python-version == '3.9' }}
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.in-project true
        poetry install -E all
    - name: Install dependencies (no hmm)
      if : ${{ matrix.python-version != '3.9' }}
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.in-project true
        poetry install -E stats
    - name: Testing
      run: |
        poetry run poe test
    - name: Upload coverage reports to Codecov
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'}}
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.in-project true
        poetry install -E all
    - name: Linting
      run: |
        poetry run poe ci_check
